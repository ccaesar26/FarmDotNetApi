using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using NetTopologySuite.Geometries;

namespace PlantedCropsService.Models.Entities;

public class Crop
{
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Autogenerated Guid
    public Guid Id { get; set; }

    [Required] 
    public required string Name { get; set; }

    [Required] 
    public required string BinomialName { get; set; }

    public string? CultivatedVariety { get; set; }

    public string? ImageLink { get; set; }

    [Required]
    public required bool Perrenial { get; set; }

    [Column(TypeName = "date")] // Specify date type in database
    public DateOnly ExpectedFirstHarvestDate { get; set; }

    [Column(TypeName = "date")] // Specify date type in database
    public DateOnly ExpectedLastHarvestDate { get; set; }

    [Required] 
    public required Guid FieldId { get; set; }

    [Required]
    public required Polygon? Surface { get; set; } // Store Polygon data, consider using spatial types

    [Required]
    public required double Area { get; set; }

    [Required] 
    public Guid CropCatalogId { get; set; }

    // Navigation Properties
    public virtual ICollection<GrowthStageEvent> GrowthStageEvents { get; set; } = new List<GrowthStageEvent>();
    public virtual ICollection<FertilizerEvent> FertilizerEvents { get; set; } = new List<FertilizerEvent>();
    public virtual ICollection<HealthStatusEvent> HealthStatusEvents { get; set; } = new List<HealthStatusEvent>();
}